# import math library
import math 

# 1) Из колоды в 52 карты извлекаются случайным образом 4 карты. 
# a) Найти вероятность того, что все карты – крести. 
# б) Найти вероятность, что среди 4-х карт окажется хотя бы один туз.

'''
(a) P = {event space} / {sample space}
Применяется формула "combinations", поскольку n>k и порядок не важен.

- {event space} для комбинаций из 4 карт в 13 крестовых
k=4 (4 карты), n=13 (число карт крестовой масти в колоде)

- {sample space} для комбинаций из 4 карт во всей колоде
k=4 (4 карты), n=52 (общее число карт в колоде)
'''

##############################################################

'''
(b) P = {event space} / {sample space}
Применяется формула "combinations", поскольку n>k и порядок не важен.
Число тузов может быть или 1 или 2 или 3 или 4.

--------------------------------------------------------------
Число тузов = 1

- {event space} для комбинаций из 4 карт c 1 тузом
Число тузов в калоде равно 4, поэтому существует 4 комбинации 1 туза из 4.
k=1 (1 туз), n=4 (общее кол-во тузов в калоде);

- {sample space} для комбинаций из 4 карт во всей колоде
k=4 (4 карты), n=52 (общее число карт в колоде)
--------------------------------------------------------------

--------------------------------------------------------------
Число тузов = 2

- {event space} для комбинаций из 4 карт c 2 тузами
Число тузов в калоде равно 4, поэтому существует 4 комбинации 2 тузов из 4.
k=2 (2 туза), n=4 (общее кол-во тузов в калоде);

- {sample space} для комбинаций из 4 карт во всей колоде
k=4 (4 карты), n=52 (общее число карт в колоде)
--------------------------------------------------------------

--------------------------------------------------------------
Число тузов = 3

- {event space} для комбинаций из 4 карт c 3 тузами
Число тузов в калоде равно 4, поэтому существует 4 комбинации 3 тузов из 4.
k=3 (3 туза), n=4 (общее кол-во тузов в калоде);

- {sample space} для комбинаций из 4 карт во всей колоде
k=4 (4 карты), n=52 (общее число карт в колоде)
--------------------------------------------------------------

--------------------------------------------------------------
Число тузов = 4

- {event space} для комбинаций из 4 карт c 4 тузами
Число тузов в калоде равно 4, поэтому существует 4 комбинации 4 тузов из 4.
k=4 (4 туза), n=4 (общее кол-во тузов в калоде);

- {sample space} для комбинаций из 4 карт во всей колоде
k=4 (4 карты), n=52 (общее число карт в колоде)
--------------------------------------------------------------
'''

# task 1
def prob_1():

    # probability (a)
    prob_a = math.comb(13, 4) / math.comb(52, 4)

    # probability (b) - 'OR' events
    prob_b = (math.comb(4, 1) / math.comb(52, 4)) \
            + (math.comb(4, 2) / math.comb(52, 4)) \
            + (math.comb(4, 3) / math.comb(52, 4)) \
            + (math.comb(4, 4) / math.comb(52, 4))

    print(f'task_1a: {prob_a}\ntask_1b: {prob_b}')
                 
prob_1()


# 2) На входной двери подъезда установлен кодовый замок, содержащий десять кнопок с цифрами от 0 до 9. 
# Код содержит три цифры, которые нужно нажать одновременно. 
# Какова вероятность того, что человек, не знающий код, откроет дверь с первой попытки?

'''
P = {event space} / {sample space}
Применяется формула "combinations", поскольку n>k и порядок не важен.

- {event space}=1 для 1 попытки открыть дверь

- {sample space} для комбинаций из 3 кнопок во всем диапазоне значений
k=3 (3 кнопки нажатых одновременно), n=10 (общее число кнопок)
'''

# task 2
def prob_2():

    # probability
    prob = 1 / math.comb(10, 3)
    print(f'task_2:  {prob}')            

prob_2()


# 3) В ящике имеется 15 деталей, из которых 9 окрашены. 
# Рабочий случайным образом извлекает 3 детали. 
# Какова вероятность того, что все извлеченные детали окрашены?

'''
P = {event space} / {sample space}
Применяется формула "combinations", поскольку n>k и порядок не важен.

- {event space} для комбинаций из 3 деталей в 9 окрашенных
k=3 (все извлеченные детали), n=9 (число окрашенных деталей)

- {sample space} для комбинаций из 3 деталей во всем ящике
k=3 (3 детали), n=15 (общее число деталей в ящике)
'''

# task 3
def prob_3():

    # probability
    prob = math.comb(9, 3) / math.comb(15, 3)
    print(f'task_3:  {prob}')            

prob_3()


# 4) В лотерее 100 билетов. Из них 2 выигрышных. 
# Какова вероятность того, что 2 приобретенных билета окажутся выигрышными?

'''
P = {event space} / {sample space}
Применяется формула "combinations", поскольку n>k и порядок не важен.

- {event space} для комбинаций из 2 билетов в 2 выйгрышных
k=2 (число купленных билетов), n=2 (число выйгрышных билетов)

- {sample space} для комбинаций из 2 билетов во всех билетах
k=2 (2 билета), n=100 (общее число билетов)
'''

# task 4
def prob_4():

    # probability
    prob = math.comb(2, 2) / math.comb(100, 2)
    print(f'task_4:  {prob}')            

prob_4()